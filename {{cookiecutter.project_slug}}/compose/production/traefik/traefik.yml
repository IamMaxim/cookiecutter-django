log:
  level: INFO

entryPoints:
  web:
    # http
    address: ':80'
    forwardedHeaders:
      trustedIPs:
        - '127.0.0.1/32' # localhost
        - '10.0.0.0/8' # swarm mode ip range
        - '192.168.0.0/16' # stand-alone after 172.16.0.0/12 is exhausted
        - '172.16.0.0/12' # stand-alone
  {%- if cookiecutter.use_celery == 'y' %}

  flower:
    address: ':5555'
  {%- endif %}

http:
  routers:
    web-router:
      rule: 'Host(`{{ cookiecutter.domain_name }}`) || Headers(`service`, `django`)'
      entryPoints:
        - web
      middlewares:
        - csrf
      service: django
    {%- if cookiecutter.use_celery == 'y' %}

    flower-secure-router:
      rule: 'Host(`{{ cookiecutter.domain_name }}`)'
      entryPoints:
        - flower
      service: flower
    {%- endif %}
    {%- if cookiecutter.cloud_provider == 'None' %}

    web-media-router:
      rule: 'Host(`{{ cookiecutter.domain_name }}`) && PathPrefix(`/media/`) || Headers(`service`, `django-media`)'
      entryPoints:
        - web
      middlewares:
        - csrf
      service: django-media
      tls:
        certResolver: letsencrypt
    {%- endif %}

  middlewares:
    csrf:
      # https://docs.traefik.io/master/middlewares/headers/#hostsproxyheaders
      # https://docs.djangoproject.com/en/dev/ref/csrf/#ajax
      headers:
        hostsProxyHeaders: ['X-CSRFToken']

  services:
    django:
      loadBalancer:
        servers:
          - url: http://django:5000
    {%- if cookiecutter.use_celery == 'y' %}

    flower:
      loadBalancer:
        servers:
          - url: http://flower:5555
    {%- endif %}
    {%- if cookiecutter.cloud_provider == 'None' %}

    django-media:
      loadBalancer:
        servers:
          - url: http://nginx:80
    {%- endif %}

providers:
  # https://docs.traefik.io/master/providers/file/
  file:
    filename: /etc/traefik/traefik.yml
    watch: true
